{"version":3,"sources":["components/Dialogs/dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/DialogMessage/DialogMessage.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","container","page_wrap","content","contentArea","contentArea_wrap","content_head","btn_b","selected","form_group","errorSubmit","sectionHeader","secondary","sticker","dialogsList","dialogs","active","dialogArea","postMessage","selectActionWrap","cancelSelect","deleteSelected","emptyDialog","dialogItem","hasNewMessages","avatar","userName","postDate","selectedDialogIcon","messageWrap","messageUnReaded","messageSelected","messageEditMode","message","messageText","date","owner","DialogItem","props","dialogLastTime","lastActivity","split","substr","react_default","a","createElement","react_router_dom","to","userId","className","concat","s","src","userPhoto","alt","material_icons_react_default","icon","size","Fragment","newMessagesCount","DialogMessage","messageTime","_useState","useState","_useState2","Object","slicedToArray","setSelected","deselectMessage","id","checkEditMode","useEffect","editMode","viewed","onClick","selectMessage","userType","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","onKeyDown","event","keyCode","preventDefault","Field","component","type","name","placeholder","autoComplete","Dialogs","dialogsIsLoaded","setDialogsLoaded","dialogId","match","params","getDialogs","then","setDialog","dialogElements","map","dialog","Dialogs_DialogItem_DialogItem","key","photos","small","lastDialogActivityDate","dialogMessageElements","messages","Dialogs_DialogMessage_DialogMessage","body","addedAt","senderId","ownerId","status","isLoadingDialogs","Preloader","center","inner","isLoadingMessages","href","cancelSelectMessages","count","deleteSelectedMessages","sendMessage","message_text","compose","connect","state","dialogsPage","items","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.44fb95ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dialogs_container__2pVt7\",\"page_wrap\":\"dialogs_page_wrap__2aZTd\",\"content\":\"dialogs_content___bRhf\",\"contentArea\":\"dialogs_contentArea__RkOaH\",\"contentArea_wrap\":\"dialogs_contentArea_wrap__-BiJS\",\"content_head\":\"dialogs_content_head__3uM12\",\"btn_b\":\"dialogs_btn_b__24EZe\",\"selected\":\"dialogs_selected__1Gfqo\",\"form_group\":\"dialogs_form_group__1XHIJ\",\"errorSubmit\":\"dialogs_errorSubmit__7o76T\",\"sectionHeader\":\"dialogs_sectionHeader__1nDcX\",\"secondary\":\"dialogs_secondary__10C3U\",\"sticker\":\"dialogs_sticker__2P5sx\",\"dialogsList\":\"dialogs_dialogsList__ssiq5\",\"dialogs\":\"dialogs_dialogs__3E4pd\",\"active\":\"dialogs_active__36OJ_\",\"dialogArea\":\"dialogs_dialogArea__1kZGS\",\"postMessage\":\"dialogs_postMessage__33BiJ\",\"selectActionWrap\":\"dialogs_selectActionWrap__3DfZI\",\"cancelSelect\":\"dialogs_cancelSelect__1k24-\",\"deleteSelected\":\"dialogs_deleteSelected__241Ep\",\"emptyDialog\":\"dialogs_emptyDialog__2UznD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogItem_container__1gvA-\",\"page_wrap\":\"DialogItem_page_wrap__2zsIO\",\"content\":\"DialogItem_content__3jpZm\",\"contentArea\":\"DialogItem_contentArea___nZOP\",\"contentArea_wrap\":\"DialogItem_contentArea_wrap__2dyLO\",\"content_head\":\"DialogItem_content_head__3S6GL\",\"btn_b\":\"DialogItem_btn_b__22wAY\",\"selected\":\"DialogItem_selected__1wKzI\",\"form_group\":\"DialogItem_form_group__rMt4U\",\"errorSubmit\":\"DialogItem_errorSubmit__3kK-q\",\"sectionHeader\":\"DialogItem_sectionHeader__Fur4N\",\"secondary\":\"DialogItem_secondary__d_KCA\",\"sticker\":\"DialogItem_sticker__1Rxjz\",\"dialogItem\":\"DialogItem_dialogItem__1nzJQ\",\"active\":\"DialogItem_active__JdILs\",\"hasNewMessages\":\"DialogItem_hasNewMessages__3N7jn\",\"avatar\":\"DialogItem_avatar__37g2d\",\"userName\":\"DialogItem_userName__1ETyt\",\"postDate\":\"DialogItem_postDate__27tAZ\",\"selectedDialogIcon\":\"DialogItem_selectedDialogIcon__1_nlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogMessage_container__1VnMK\",\"page_wrap\":\"DialogMessage_page_wrap__1r5wk\",\"content\":\"DialogMessage_content__2CF_l\",\"contentArea\":\"DialogMessage_contentArea__3M17B\",\"contentArea_wrap\":\"DialogMessage_contentArea_wrap__3Ojvo\",\"content_head\":\"DialogMessage_content_head__q2BRk\",\"btn_b\":\"DialogMessage_btn_b__nP6h5\",\"selected\":\"DialogMessage_selected__rS4xR\",\"form_group\":\"DialogMessage_form_group__2s0s0\",\"errorSubmit\":\"DialogMessage_errorSubmit__1RQwB\",\"sectionHeader\":\"DialogMessage_sectionHeader__1-b8p\",\"secondary\":\"DialogMessage_secondary__S4-aq\",\"sticker\":\"DialogMessage_sticker__1IY0H\",\"messageWrap\":\"DialogMessage_messageWrap__2ZjsY\",\"messageUnReaded\":\"DialogMessage_messageUnReaded__2kYIF\",\"messageSelected\":\"DialogMessage_messageSelected__1wazP\",\"messageEditMode\":\"DialogMessage_messageEditMode__3kQBv\",\"message\":\"DialogMessage_message__1piUU\",\"avatar\":\"DialogMessage_avatar__2Xv4Q\",\"messageText\":\"DialogMessage_messageText__oR5OC\",\"date\":\"DialogMessage_date__XvRST\",\"owner\":\"DialogMessage_owner__1XX2Q\"};","import React from \"react\";\nimport s from \"./DialogItem.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport userPhoto from \"../../../assets/img/user.jpg\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\n\nconst DialogItem = props => {\n  const dialogLastTime = props.lastActivity.split([\"T\"])[1].substr(0, 5);\n  return (\n    <div>\n      <NavLink\n        to={\"/dialogs/\" + props.userId}\n        className={`\n        ${s.dialogItem} ${props.selected && s.selected} \n        ${props.hasNewMessages && s.hasNewMessages}\n        `}\n      >\n        <img\n          src={props.avatar ? props.avatar : userPhoto}\n          alt=\"userPhoto\"\n          className={s.avatar}\n        />\n        <span className={s.userName}>{props.userName}</span>\n        {props.selected ? (\n          <span className={s.selectedDialogIcon}>\n            <MaterialIcon icon=\"label_important\" size={18} />\n          </span>\n        ) : (\n          <>\n            {props.newMessagesCount > 0 ? (\n              <span className={s.sticker}>{props.newMessagesCount}</span>\n            ) : (\n              <span className={s.postDate}>{dialogLastTime}</span>\n            )}\n          </>\n        )}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React, { useState, useEffect } from \"react\";\nimport s from \"./DialogMessage.module.scss\";\nimport userPhoto from \"../../../assets/img/user.jpg\";\n\nconst DialogMessage = props => {\n  const messageTime = props.date.split([\"T\"])[1].substr(0, 5);\n\n  const [selected, setSelected] = useState(false);\n\n  const selectMessage = () => {\n    props.selectMessage(props.id);\n    setSelected(true);\n    props.checkEditMode();\n  };\n\n  const deselectMessage = () => {\n    props.deselectMessage(props.id);\n    setSelected(false);\n    props.checkEditMode();\n  };\n\n  useEffect(() => {\n    if (!props.editMode && selected) deselectMessage();\n  }, [props.editMode]);\n\n  return (\n    <div\n      className={`${s.messageWrap} ${!props.viewed && s.messageUnReaded} ${\n        selected ? s.messageSelected : \"\"\n      } ${props.editMode && s.messageEditMode}`}\n      onClick={selected ? deselectMessage : selectMessage}\n    >\n      <div className={props.userType ? `${s.message} ${s.owner}` : s.message}>\n        <img\n          src={props.avatar ? props.avatar : userPhoto}\n          alt=\"userPhoto\"\n          className={s.avatar}\n        />\n        <div className={s.messageText}>\n          {props.message}\n          <div className={s.date}>{messageTime}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DialogMessage;\n","import React, { useState, useEffect } from \"react\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\nimport s from \"./dialogs.module.scss\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst DialogForm = props => {\n  return (\n    <form\n      onSubmit={props.handleSubmit}\n      onKeyDown={event => {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n          props.handleSubmit();\n        }\n      }}\n    >\n      <MaterialIcon icon=\"attach_file\" size={18} />\n      <Field\n        component={\"input\"}\n        type={\"text\"}\n        name={\"message_text\"}\n        placeholder={\"Message...\"}\n        autoComplete={\"off\"}\n      />\n      <button type=\"submit\">\n        <MaterialIcon icon=\"send\" size={24} />\n      </button>\n    </form>\n  );\n};\n\nlet formName = \"profileDialogMessage\";\n\nconst DialogReduxForm = reduxForm({\n  form: formName\n})(DialogForm);\n\nconst Dialogs = props => {\n  let [dialogsIsLoaded, setDialogsLoaded] = useState(false);\n  const dialogId = props.match.params.dialogId;\n\n  const cancelSelectMessages = () => {\n    props.cancelSelectMessages();\n    props.checkEditMode();\n  };\n\n  const deleteSelectMessages = () => {\n    props.deleteSelectedMessages();\n  };\n\n  useEffect(() => {\n    if (!dialogsIsLoaded) {\n      props.getDialogs().then(() => {\n        setDialogsLoaded(true);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (dialogId) {\n      props.setDialog(dialogId);\n    }\n  }, [dialogId]);\n\n  let dialogElements = props.dialogs.map(dialog => (\n    <DialogItem\n      key={dialog.id}\n      avatar={dialog.photos.small}\n      userId={dialog.id}\n      userName={dialog.userName}\n      hasNewMessages={dialog.hasNewMessages}\n      lastActivity={dialog.lastDialogActivityDate}\n      newMessagesCount={dialog.newMessagesCount}\n      selected={props.match.params.dialogId == dialog.id}\n    />\n  ));\n\n  let dialogMessageElements = props.messages.map(message => (\n    <DialogMessage\n      key={message.id}\n      id={message.id}\n      avatar={message.avatar}\n      userId={message.userId}\n      message={message.body}\n      date={message.addedAt}\n      userType={message.senderId == props.ownerId && \"owner\"}\n      viewed={message.viewed}\n      selected={false}\n      selectMessage={props.selectMessage}\n      deselectMessage={props.deselectMessage}\n      checkEditMode={props.checkEditMode}\n      editMode={props.editMode.status}\n    />\n  ));\n\n  let onSubmit = message => {\n    props.sendMessage(dialogId, message.message_text, formName);\n  };\n\n  return (\n    <div className={`${s.dialogs} ${dialogId && s.active}`}>\n      <div className={s.contentArea}>\n        <div className={s.dialogsList}>\n          {props.isLoadingDialogs ? (\n            <Preloader center={true} inner={true} />\n          ) : (\n            <>{dialogElements}</>\n          )}\n        </div>\n      </div>\n      <div className={s.contentArea}>\n        {dialogId ? (\n          <div className={s.dialogArea}>\n            {props.isLoadingMessages ? (\n              <Preloader center={true} inner={true} />\n            ) : (\n              <>{dialogMessageElements}</>\n            )}\n\n            <div className={s.postMessage}>\n              {props.editMode.status ? (\n                <div className={s.selectActionWrap}>\n                  <a\n                    href=\"#\"\n                    className={s.cancelSelect}\n                    onClick={cancelSelectMessages}\n                  >\n                    <small>Cancel</small>\n                  </a>\n\n                  <small>\n                    <b>\n                      {props.editMode.count} message\n                      {props.editMode.count > 1 ? \"s\" : \"\"} selected\n                    </b>\n                  </small>\n\n                  <a\n                    href=\"#\"\n                    className={s.deleteSelected}\n                    onClick={deleteSelectMessages}\n                  >\n                    <MaterialIcon icon=\"delete_forever\" size={18} />\n                    <small>Delete selected</small>\n                  </a>\n                </div>\n              ) : (\n                <DialogReduxForm onSubmit={onSubmit} />\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className={s.emptyDialog}>\n            <MaterialIcon icon=\"touch_app\" size={88} />\n            <p>Select dialogue</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  sendMessage,\n  getDialogs,\n  setDialog,\n  selectMessage,\n  deselectMessage,\n  checkEditMode,\n  cancelSelectMessages,\n  deleteSelectedMessages\n} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { withRouter } from \"react-router-dom\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages.items,\n    ownerId: state.auth.userId,\n    editMode: state.dialogsPage.editMode,\n    isLoadingDialogs: state.dialogsPage.isLoadingDialogs,\n    isLoadingMessages: state.dialogsPage.isLoadingMessages\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    sendMessage,\n    getDialogs,\n    setDialog,\n    selectMessage,\n    deselectMessage,\n    checkEditMode,\n    cancelSelectMessages,\n    deleteSelectedMessages\n  }),\n  withRouter,\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}